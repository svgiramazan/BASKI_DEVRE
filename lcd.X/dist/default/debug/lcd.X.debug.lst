

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Dec 25 21:35:29 2024

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x4E,2
    19     0000                     
    20                           ; Generated 12/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F84A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0004                     fsr             equ	4
    55     0004                     fsr0            equ	4
    56     0000                     indf            equ	0
    57     0000                     indf0           equ	0
    58     0002                     pc              equ	2
    59     0002                     pcl             equ	2
    60     000A                     pclath          equ	10
    61     0003                     status          equ	3
    62     0000                     INDF            equ	0	;# 
    63     0001                     TMR0            equ	1	;# 
    64     0002                     PCL             equ	2	;# 
    65     0003                     STATUS          equ	3	;# 
    66     0004                     FSR             equ	4	;# 
    67     0005                     PORTA           equ	5	;# 
    68     0006                     PORTB           equ	6	;# 
    69     0008                     EEDATA          equ	8	;# 
    70     0009                     EEADR           equ	9	;# 
    71     000A                     PCLATH          equ	10	;# 
    72     000B                     INTCON          equ	11	;# 
    73     0081                     OPTION_REG      equ	129	;# 
    74     0085                     TRISA           equ	133	;# 
    75     0086                     TRISB           equ	134	;# 
    76     0088                     EECON1          equ	136	;# 
    77     0089                     EECON2          equ	137	;# 
    78     0000                     INDF            equ	0	;# 
    79     0001                     TMR0            equ	1	;# 
    80     0002                     PCL             equ	2	;# 
    81     0003                     STATUS          equ	3	;# 
    82     0004                     FSR             equ	4	;# 
    83     0005                     PORTA           equ	5	;# 
    84     0006                     PORTB           equ	6	;# 
    85     0008                     EEDATA          equ	8	;# 
    86     0009                     EEADR           equ	9	;# 
    87     000A                     PCLATH          equ	10	;# 
    88     000B                     INTCON          equ	11	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISA           equ	133	;# 
    91     0086                     TRISB           equ	134	;# 
    92     0088                     EECON1          equ	136	;# 
    93     0089                     EECON2          equ	137	;# 
    94     0033                     _RB3            set	51
    95     0032                     _RB2            set	50
    96     0037                     _RB7            set	55
    97     0036                     _RB6            set	54
    98     0035                     _RB5            set	53
    99     0034                     _RB4            set	52
   100     0086                     _TRISB          set	134
   101                           
   102                           	psect	strings
   103     0001                     __pstrings:
   104     0001                     stringtab:
   105     0001                     __stringtab:
   106     0001                     stringcode:	
   107                           ;	String table - string pointers are 1 byte each
   108                           
   109     0001                     stringdir:
   110     0001  3000               	movlw	high stringdir
   111     0002  008A               	movwf	10
   112     0003  0804               	movf	4,w
   113     0004  0A84               	incf	4,f
   114     0005  0782               	addwf	2,f
   115     0006                     __stringbase:
   116     0006  3400               	retlw	0
   117     0007                     __end_of__stringtab:
   118     0007                     STR_2:
   119     0007  3443               	retlw	67	;'C'
   120     0008  3461               	retlw	97	;'a'
   121     0009  346C               	retlw	108	;'l'
   122     000A  3469               	retlw	105	;'i'
   123     000B  3473               	retlw	115	;'s'
   124     000C  3469               	retlw	105	;'i'
   125     000D  3479               	retlw	121	;'y'
   126     000E  346F               	retlw	111	;'o'
   127     000F  3472               	retlw	114	;'r'
   128     0010  3400               	retlw	0
   129     0011                     STR_1:
   130     0011  3453               	retlw	83	;'S'
   131     0012  346F               	retlw	111	;'o'
   132     0013  3472               	retlw	114	;'r'
   133     0014  3475               	retlw	117	;'u'
   134     0015  346E               	retlw	110	;'n'
   135     0016  3473               	retlw	115	;'s'
   136     0017  3475               	retlw	117	;'u'
   137     0018  347A               	retlw	122	;'z'
   138     0019  3400               	retlw	0
   139                           
   140                           	psect	cinit
   141     03FE                     start_initialization:	
   142                           ; #config settings
   143                           
   144     03FE                     __initialization:
   145     03FE                     end_of_initialization:	
   146                           ;End of C runtime variable initialization code
   147                           
   148     03FE                     __end_of__initialization:
   149     03FE  0183               	clrf	3
   150     03FF  2B44               	ljmp	_main	;jump to C main() function
   151                           
   152                           	psect	cstackCOMMON
   153     0000                     __pcstackCOMMON:
   154     0000                     ??_Lcd_Port:
   155     0000                     ??_Lcd_Clear:	
   156                           ; 1 bytes @ 0x0
   157                           
   158     0000                     ??_Lcd_Write_String:	
   159                           ; 1 bytes @ 0x0
   160                           
   161                           
   162                           	psect	cstackBANK0
   163     000C                     __pcstackBANK0:	
   164                           ; 1 bytes @ 0x0
   165                           
   166     000C                     ?_Lcd_Port:
   167     000C                     ?_Lcd_Cmd:	
   168                           ; 1 bytes @ 0x0
   169                           
   170     000C                     ?_Lcd_Init:	
   171                           ; 1 bytes @ 0x0
   172                           
   173     000C                     ?_Lcd_Write_Char:	
   174                           ; 1 bytes @ 0x0
   175                           
   176     000C                     ?_setup:	
   177                           ; 1 bytes @ 0x0
   178                           
   179     000C                     ?_main:	
   180                           ; 1 bytes @ 0x0
   181                           
   182     000C                     ?_Lcd_Clear:	
   183                           ; 1 bytes @ 0x0
   184                           
   185     000C                     Lcd_Port@a:	
   186                           ; 2 bytes @ 0x0
   187                           
   188                           
   189                           ; 1 bytes @ 0x0
   190     000C                     	ds	1
   191     000D                     ??_Lcd_Cmd:
   192     000D                     ??_Lcd_Write_Char:	
   193                           ; 1 bytes @ 0x1
   194                           
   195                           
   196                           ; 1 bytes @ 0x1
   197     000D                     	ds	1
   198     000E                     Lcd_Write_Char@temp:
   199                           
   200                           ; 1 bytes @ 0x2
   201     000E                     	ds	1
   202     000F                     Lcd_Cmd@a:
   203     000F                     Lcd_Write_Char@y:	
   204                           ; 1 bytes @ 0x3
   205                           
   206                           
   207                           ; 1 bytes @ 0x3
   208     000F                     	ds	1
   209     0010                     ?_Lcd_Set_Cursor:
   210     0010                     Lcd_Set_Cursor@b:	
   211                           ; 1 bytes @ 0x4
   212                           
   213     0010                     Lcd_Write_Char@a:	
   214                           ; 1 bytes @ 0x4
   215                           
   216     0010                     ??_Lcd_Init:	
   217                           ; 1 bytes @ 0x4
   218                           
   219                           
   220                           ; 1 bytes @ 0x4
   221     0010                     	ds	1
   222     0011                     ?_Lcd_Write_String:
   223     0011                     Lcd_Write_String@a:	
   224                           ; 1 bytes @ 0x5
   225                           
   226     0011                     ??_Lcd_Set_Cursor:	
   227                           ; 1 bytes @ 0x5
   228                           
   229                           
   230                           ; 1 bytes @ 0x5
   231     0011                     	ds	1
   232     0012                     Lcd_Set_Cursor@a:
   233     0012                     Lcd_Write_String@i:	
   234                           ; 1 bytes @ 0x6
   235                           
   236     0012                     ??_setup:	
   237                           ; 2 bytes @ 0x6
   238                           
   239                           
   240                           ; 1 bytes @ 0x6
   241     0012                     	ds	1
   242     0013                     Lcd_Set_Cursor@z:
   243                           
   244                           ; 1 bytes @ 0x7
   245     0013                     	ds	1
   246     0014                     Lcd_Set_Cursor@y:
   247                           
   248                           ; 1 bytes @ 0x8
   249     0014                     	ds	1
   250     0015                     Lcd_Set_Cursor@temp:
   251                           
   252                           ; 1 bytes @ 0x9
   253     0015                     	ds	1
   254     0016                     ??_main:
   255                           
   256                           ; 1 bytes @ 0xA
   257     0016                     	ds	3
   258                           
   259                           	psect	maintext
   260     0344                     __pmaintext:	
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 25 in file "main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : B00/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMMON   BANK0
   280 ;;      Params:         0       0
   281 ;;      Locals:         0       0
   282 ;;      Temps:          0       3
   283 ;;      Totals:         0       3
   284 ;;Total ram usage:        3 bytes
   285 ;; Hardware stack levels required when called: 4
   286 ;; This function calls:
   287 ;;		_Lcd_Set_Cursor
   288 ;;		_Lcd_Write_String
   289 ;;		_setup
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295     0344                     _main:	
   296                           ;psect for function _main
   297                           
   298     0344                     l820:	
   299                           ;incstack = 0
   300                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   301                           
   302                           
   303                           ;main.c: 26:     setup();
   304     0344  22E9               	fcall	_setup
   305     0345                     l65:	
   306                           ;main.c: 28:     while (1) {
   307                           
   308                           
   309                           ;main.c: 29:         Lcd_Set_Cursor(1, 5);
   310     0345  3005               	movlw	5
   311     0346  1283               	bcf	3,5	;RP0=0, select bank0
   312     0347  0090               	movwf	Lcd_Set_Cursor@b
   313     0348  3001               	movlw	1
   314     0349  23C3               	fcall	_Lcd_Set_Cursor
   315     034A                     l822:
   316                           
   317                           ;main.c: 30:         Lcd_Write_String("Sorunsuz");
   318     034A  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   319     034B  1283               	bcf	3,5	;RP0=0, select bank0
   320     034C  0091               	movwf	Lcd_Write_String@a
   321     034D  230B               	fcall	_Lcd_Write_String
   322     034E                     l824:
   323                           
   324                           ;main.c: 32:         Lcd_Set_Cursor(2, 6);
   325     034E  3006               	movlw	6
   326     034F  1283               	bcf	3,5	;RP0=0, select bank0
   327     0350  0090               	movwf	Lcd_Set_Cursor@b
   328     0351  3002               	movlw	2
   329     0352  23C3               	fcall	_Lcd_Set_Cursor
   330                           
   331                           ;main.c: 33:         Lcd_Write_String("Calisiyor");
   332     0353  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   333     0354  1283               	bcf	3,5	;RP0=0, select bank0
   334     0355  0091               	movwf	Lcd_Write_String@a
   335     0356  230B               	fcall	_Lcd_Write_String
   336     0357                     l826:
   337                           
   338                           ;main.c: 35:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   339     0357  3006               	movlw	6
   340     0358  1283               	bcf	3,5	;RP0=0, select bank0
   341     0359  0098               	movwf	??_main+2
   342     035A  3013               	movlw	19
   343     035B  0097               	movwf	??_main+1
   344     035C  30AD               	movlw	173
   345     035D  0096               	movwf	??_main
   346     035E                     u217:
   347     035E  0B96               	decfsz	??_main,f
   348     035F  2B5E               	goto	u217
   349     0360  0B97               	decfsz	??_main+1,f
   350     0361  2B5E               	goto	u217
   351     0362  0B98               	decfsz	??_main+2,f
   352     0363  2B5E               	goto	u217
   353     0364  2B65               	nop2
   354     0365  2B45               	goto	l65
   355     0366  2800               	ljmp	start
   356     0367                     __end_of_main:
   357                           
   358                           	psect	text1
   359     02E9                     __ptext1:	
   360 ;; *************** function _setup *****************
   361 ;; Defined at:
   362 ;;		line 18 in file "main.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2, status,0, pclath, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0
   376 ;;      Params:         0       0
   377 ;;      Locals:         0       0
   378 ;;      Temps:          0       2
   379 ;;      Totals:         0       2
   380 ;;Total ram usage:        2 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; Hardware stack levels required when called: 3
   383 ;; This function calls:
   384 ;;		_Lcd_Clear
   385 ;;		_Lcd_Init
   386 ;; This function is called by:
   387 ;;		_main
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391     02E9                     _setup:	
   392                           ;psect for function _setup
   393                           
   394     02E9                     l808:	
   395                           ;incstack = 0
   396                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   397                           
   398                           
   399                           ;main.c: 19:     TRISB = 0x00;
   400     02E9  1683               	bsf	3,5	;RP0=1, select bank1
   401     02EA  0186               	clrf	6	;volatile
   402     02EB                     l810:
   403                           
   404                           ;main.c: 20:     Lcd_Init();
   405     02EB  238F               	fcall	_Lcd_Init
   406     02EC                     l812:
   407                           
   408                           ;main.c: 21:     _delay((unsigned long)((50)*(4000000/4000.0)));
   409     02EC  3041               	movlw	65
   410     02ED  1283               	bcf	3,5	;RP0=0, select bank0
   411     02EE  0093               	movwf	??_setup+1
   412     02EF  30EE               	movlw	238
   413     02F0  0092               	movwf	??_setup
   414     02F1                     u227:
   415     02F1  0B92               	decfsz	??_setup,f
   416     02F2  2AF1               	goto	u227
   417     02F3  0B93               	decfsz	??_setup+1,f
   418     02F4  2AF1               	goto	u227
   419     02F5  0000               	nop
   420     02F6                     l814:
   421                           
   422                           ;main.c: 22:     Lcd_Clear();
   423     02F6  22E4               	fcall	_Lcd_Clear
   424     02F7                     l60:
   425     02F7  0008               	return
   426     02F8                     __end_of_setup:
   427                           
   428                           	psect	text2
   429     038F                     __ptext2:	
   430 ;; *************** function _Lcd_Init *****************
   431 ;; Defined at:
   432 ;;		line 62 in file "D:\mplab\pic\include\c99/lcd.h"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, status,2, status,0, pclath, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMMON   BANK0
   446 ;;      Params:         0       0
   447 ;;      Locals:         0       0
   448 ;;      Temps:          0       2
   449 ;;      Totals:         0       2
   450 ;;Total ram usage:        2 bytes
   451 ;; Hardware stack levels used: 1
   452 ;; Hardware stack levels required when called: 2
   453 ;; This function calls:
   454 ;;		_Lcd_Cmd
   455 ;;		_Lcd_Port
   456 ;; This function is called by:
   457 ;;		_setup
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461     038F                     _Lcd_Init:	
   462                           ;psect for function _Lcd_Init
   463                           
   464     038F                     l742:	
   465                           ;incstack = 0
   466                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   467                           
   468                           
   469                           ;D:\mplab\pic\include\c99/lcd.h: 64:   Lcd_Port(0x00);
   470     038F  3000               	movlw	0
   471     0390  2325               	fcall	_Lcd_Port
   472     0391                     l744:
   473                           
   474                           ;D:\mplab\pic\include\c99/lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
   475     0391  301A               	movlw	26
   476     0392  1283               	bcf	3,5	;RP0=0, select bank0
   477     0393  0091               	movwf	??_Lcd_Init+1
   478     0394  30F8               	movlw	248
   479     0395  0090               	movwf	??_Lcd_Init
   480     0396                     u237:
   481     0396  0B90               	decfsz	??_Lcd_Init,f
   482     0397  2B96               	goto	u237
   483     0398  0B91               	decfsz	??_Lcd_Init+1,f
   484     0399  2B96               	goto	u237
   485     039A  0000               	nop
   486     039B                     l746:
   487                           
   488                           ;D:\mplab\pic\include\c99/lcd.h: 66:   Lcd_Cmd(0x03);
   489     039B  3003               	movlw	3
   490     039C  22F8               	fcall	_Lcd_Cmd
   491                           
   492                           ;D:\mplab\pic\include\c99/lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
   493     039D  3007               	movlw	7
   494     039E  1283               	bcf	3,5	;RP0=0, select bank0
   495     039F  0091               	movwf	??_Lcd_Init+1
   496     03A0  307D               	movlw	125
   497     03A1  0090               	movwf	??_Lcd_Init
   498     03A2                     u247:
   499     03A2  0B90               	decfsz	??_Lcd_Init,f
   500     03A3  2BA2               	goto	u247
   501     03A4  0B91               	decfsz	??_Lcd_Init+1,f
   502     03A5  2BA2               	goto	u247
   503     03A6                     l748:
   504                           
   505                           ;D:\mplab\pic\include\c99/lcd.h: 68:   Lcd_Cmd(0x03);
   506     03A6  3003               	movlw	3
   507     03A7  22F8               	fcall	_Lcd_Cmd
   508     03A8                     l750:
   509                           
   510                           ;D:\mplab\pic\include\c99/lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
   511     03A8  300F               	movlw	15
   512     03A9  1283               	bcf	3,5	;RP0=0, select bank0
   513     03AA  0091               	movwf	??_Lcd_Init+1
   514     03AB  3047               	movlw	71
   515     03AC  0090               	movwf	??_Lcd_Init
   516     03AD                     u257:
   517     03AD  0B90               	decfsz	??_Lcd_Init,f
   518     03AE  2BAD               	goto	u257
   519     03AF  0B91               	decfsz	??_Lcd_Init+1,f
   520     03B0  2BAD               	goto	u257
   521     03B1  2BB2               	nop2
   522                           
   523                           ;D:\mplab\pic\include\c99/lcd.h: 70:   Lcd_Cmd(0x03);
   524     03B2  3003               	movlw	3
   525     03B3  22F8               	fcall	_Lcd_Cmd
   526                           
   527                           ;D:\mplab\pic\include\c99/lcd.h: 72:   Lcd_Cmd(0x02);
   528     03B4  3002               	movlw	2
   529     03B5  22F8               	fcall	_Lcd_Cmd
   530                           
   531                           ;D:\mplab\pic\include\c99/lcd.h: 73:   Lcd_Cmd(0x02);
   532     03B6  3002               	movlw	2
   533     03B7  22F8               	fcall	_Lcd_Cmd
   534                           
   535                           ;D:\mplab\pic\include\c99/lcd.h: 74:   Lcd_Cmd(0x08);
   536     03B8  3008               	movlw	8
   537     03B9  22F8               	fcall	_Lcd_Cmd
   538                           
   539                           ;D:\mplab\pic\include\c99/lcd.h: 75:   Lcd_Cmd(0x00);
   540     03BA  3000               	movlw	0
   541     03BB  22F8               	fcall	_Lcd_Cmd
   542                           
   543                           ;D:\mplab\pic\include\c99/lcd.h: 76:   Lcd_Cmd(0x0C);
   544     03BC  300C               	movlw	12
   545     03BD  22F8               	fcall	_Lcd_Cmd
   546                           
   547                           ;D:\mplab\pic\include\c99/lcd.h: 77:   Lcd_Cmd(0x00);
   548     03BE  3000               	movlw	0
   549     03BF  22F8               	fcall	_Lcd_Cmd
   550                           
   551                           ;D:\mplab\pic\include\c99/lcd.h: 78:   Lcd_Cmd(0x06);
   552     03C0  3006               	movlw	6
   553     03C1  22F8               	fcall	_Lcd_Cmd
   554     03C2                     l42:
   555     03C2  0008               	return
   556     03C3                     __end_of_Lcd_Init:
   557                           
   558                           	psect	text3
   559     02E4                     __ptext3:	
   560 ;; *************** function _Lcd_Clear *****************
   561 ;; Defined at:
   562 ;;		line 35 in file "D:\mplab\pic\include\c99/lcd.h"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  2   32[None  ] int 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0, pclath, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0
   576 ;;      Params:         0       0
   577 ;;      Locals:         0       0
   578 ;;      Temps:          0       0
   579 ;;      Totals:         0       0
   580 ;;Total ram usage:        0 bytes
   581 ;; Hardware stack levels used: 1
   582 ;; Hardware stack levels required when called: 2
   583 ;; This function calls:
   584 ;;		_Lcd_Cmd
   585 ;; This function is called by:
   586 ;;		_setup
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590     02E4                     _Lcd_Clear:	
   591                           ;psect for function _Lcd_Clear
   592                           
   593     02E4                     l740:	
   594                           ;incstack = 0
   595                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
   596                           
   597                           
   598                           ;D:\mplab\pic\include\c99/lcd.h: 37:  Lcd_Cmd(0);
   599     02E4  3000               	movlw	0
   600     02E5  22F8               	fcall	_Lcd_Cmd
   601                           
   602                           ;D:\mplab\pic\include\c99/lcd.h: 38:  Lcd_Cmd(1);
   603     02E6  3001               	movlw	1
   604     02E7  22F8               	fcall	_Lcd_Cmd
   605     02E8                     l33:
   606     02E8  0008               	return
   607     02E9                     __end_of_Lcd_Clear:
   608                           
   609                           	psect	text4
   610     030B                     __ptext4:	
   611 ;; *************** function _Lcd_Write_String *****************
   612 ;; Defined at:
   613 ;;		line 97 in file "D:\mplab\pic\include\c99/lcd.h"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  a               1    5[BANK0 ] PTR unsigned char 
   616 ;;		 -> STR_2(10), STR_1(9), 
   617 ;; Auto vars:     Size  Location     Type
   618 ;;  i               2    6[BANK0 ] int 
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0
   628 ;;      Params:         0       1
   629 ;;      Locals:         0       2
   630 ;;      Temps:          0       0
   631 ;;      Totals:         0       3
   632 ;;Total ram usage:        3 bytes
   633 ;; Hardware stack levels used: 1
   634 ;; Hardware stack levels required when called: 2
   635 ;; This function calls:
   636 ;;		_Lcd_Write_Char
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642     030B                     _Lcd_Write_String:	
   643                           ;psect for function _Lcd_Write_String
   644                           
   645     030B                     l800:	
   646                           ;incstack = 0
   647                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   648                           
   649                           
   650                           ;D:\mplab\pic\include\c99/lcd.h: 97: void Lcd_Write_String(char *a);D:\mplab\pic\include
      +                          \c99/lcd.h: 98: {;D:\mplab\pic\include\c99/lcd.h: 99:  int i;;D:\mplab\pic\include\c99/l
      +                          cd.h: 100:  for(i=0;a[i]!='\0';i++)
   651     030B  1283               	bcf	3,5	;RP0=0, select bank0
   652     030C  0192               	clrf	Lcd_Write_String@i
   653     030D  0193               	clrf	Lcd_Write_String@i+1
   654     030E  2B1B               	goto	l806
   655     030F                     l802:
   656                           
   657                           ;D:\mplab\pic\include\c99/lcd.h: 101:     Lcd_Write_Char(a[i]);
   658     030F  0812               	movf	Lcd_Write_String@i,w
   659     0310  0711               	addwf	Lcd_Write_String@a,w
   660     0311  0084               	movwf	4
   661     0312  2001               	fcall	stringdir
   662     0313  2367               	fcall	_Lcd_Write_Char
   663     0314                     l804:
   664     0314  3001               	movlw	1
   665     0315  1283               	bcf	3,5	;RP0=0, select bank0
   666     0316  0792               	addwf	Lcd_Write_String@i,f
   667     0317  1803               	skipnc
   668     0318  0A93               	incf	Lcd_Write_String@i+1,f
   669     0319  3000               	movlw	0
   670     031A  0793               	addwf	Lcd_Write_String@i+1,f
   671     031B                     l806:
   672     031B  0812               	movf	Lcd_Write_String@i,w
   673     031C  0711               	addwf	Lcd_Write_String@a,w
   674     031D  0084               	movwf	4
   675     031E  2001               	fcall	stringdir
   676     031F  3A00               	xorlw	0
   677     0320  1D03               	skipz
   678     0321  2B23               	goto	u201
   679     0322  2B24               	goto	u200
   680     0323                     u201:
   681     0323  2B0F               	goto	l802
   682     0324                     u200:
   683     0324                     l51:
   684     0324  0008               	return
   685     0325                     __end_of_Lcd_Write_String:
   686                           
   687                           	psect	text5
   688     0367                     __ptext5:	
   689 ;; *************** function _Lcd_Write_Char *****************
   690 ;; Defined at:
   691 ;;		line 81 in file "D:\mplab\pic\include\c99/lcd.h"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  a               1    wreg     unsigned char 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  a               1    4[BANK0 ] unsigned char 
   696 ;;  y               1    3[BANK0 ] unsigned char 
   697 ;;  temp            1    2[BANK0 ] unsigned char 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, status,2, status,0, pclath, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0
   707 ;;      Params:         0       0
   708 ;;      Locals:         0       3
   709 ;;      Temps:          0       1
   710 ;;      Totals:         0       4
   711 ;;Total ram usage:        4 bytes
   712 ;; Hardware stack levels used: 1
   713 ;; Hardware stack levels required when called: 1
   714 ;; This function calls:
   715 ;;		_Lcd_Port
   716 ;; This function is called by:
   717 ;;		_Lcd_Write_String
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721     0367                     _Lcd_Write_Char:	
   722                           ;psect for function _Lcd_Write_Char
   723                           
   724                           
   725                           ;incstack = 0
   726                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   727                           ;Lcd_Write_Char@a stored from wreg
   728     0367  1283               	bcf	3,5	;RP0=0, select bank0
   729     0368  0090               	movwf	Lcd_Write_Char@a
   730     0369                     l752:
   731                           
   732                           ;D:\mplab\pic\include\c99/lcd.h: 81: void Lcd_Write_Char(char a);D:\mplab\pic\include\c9
      +                          9/lcd.h: 82: {;D:\mplab\pic\include\c99/lcd.h: 83:    char temp,y;;D:\mplab\pic\include\
      +                          c99/lcd.h: 84:    temp = a&0x0F;
   733     0369  0810               	movf	Lcd_Write_Char@a,w
   734     036A  008E               	movwf	Lcd_Write_Char@temp
   735     036B                     l754:
   736     036B  300F               	movlw	15
   737     036C  058E               	andwf	Lcd_Write_Char@temp,f
   738     036D                     l756:
   739                           
   740                           ;D:\mplab\pic\include\c99/lcd.h: 85:    y = a&0xF0;
   741     036D  0810               	movf	Lcd_Write_Char@a,w
   742     036E  008F               	movwf	Lcd_Write_Char@y
   743     036F  30F0               	movlw	240
   744     0370  058F               	andwf	Lcd_Write_Char@y,f
   745     0371                     l758:
   746                           
   747                           ;D:\mplab\pic\include\c99/lcd.h: 86:    RB2 = 1;
   748     0371  1506               	bsf	6,2	;volatile
   749     0372                     l760:
   750                           
   751                           ;D:\mplab\pic\include\c99/lcd.h: 87:    Lcd_Port(y>>4);
   752     0372  080F               	movf	Lcd_Write_Char@y,w
   753     0373  008D               	movwf	??_Lcd_Write_Char
   754     0374  3004               	movlw	4
   755     0375                     u155:
   756     0375  1003               	clrc
   757     0376  0C8D               	rrf	??_Lcd_Write_Char,f
   758     0377  3EFF               	addlw	-1
   759     0378  1D03               	skipz
   760     0379  2B75               	goto	u155
   761     037A  080D               	movf	??_Lcd_Write_Char,w
   762     037B  2325               	fcall	_Lcd_Port
   763     037C                     l762:
   764                           
   765                           ;D:\mplab\pic\include\c99/lcd.h: 88:    RB3 = 1;
   766     037C  1283               	bcf	3,5	;RP0=0, select bank0
   767     037D  1586               	bsf	6,3	;volatile
   768     037E                     l764:
   769                           
   770                           ;D:\mplab\pic\include\c99/lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0))
      +                          );
   771     037E  300D               	movlw	13
   772     037F  008D               	movwf	??_Lcd_Write_Char
   773     0380                     u267:
   774     0380  0B8D               	decfsz	??_Lcd_Write_Char,f
   775     0381  2B80               	goto	u267
   776     0382                     l766:
   777                           
   778                           ;D:\mplab\pic\include\c99/lcd.h: 90:    RB3 = 0;
   779     0382  1283               	bcf	3,5	;RP0=0, select bank0
   780     0383  1186               	bcf	6,3	;volatile
   781     0384                     l768:
   782                           
   783                           ;D:\mplab\pic\include\c99/lcd.h: 91:    Lcd_Port(temp);
   784     0384  080E               	movf	Lcd_Write_Char@temp,w
   785     0385  2325               	fcall	_Lcd_Port
   786     0386                     l770:
   787                           
   788                           ;D:\mplab\pic\include\c99/lcd.h: 92:    RB3 = 1;
   789     0386  1283               	bcf	3,5	;RP0=0, select bank0
   790     0387  1586               	bsf	6,3	;volatile
   791     0388                     l772:
   792                           
   793                           ;D:\mplab\pic\include\c99/lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0))
      +                          );
   794     0388  300D               	movlw	13
   795     0389  008D               	movwf	??_Lcd_Write_Char
   796     038A                     u277:
   797     038A  0B8D               	decfsz	??_Lcd_Write_Char,f
   798     038B  2B8A               	goto	u277
   799     038C                     l774:
   800                           
   801                           ;D:\mplab\pic\include\c99/lcd.h: 94:    RB3 = 0;
   802     038C  1283               	bcf	3,5	;RP0=0, select bank0
   803     038D  1186               	bcf	6,3	;volatile
   804     038E                     l45:
   805     038E  0008               	return
   806     038F                     __end_of_Lcd_Write_Char:
   807                           
   808                           	psect	text6
   809     03C3                     __ptext6:	
   810 ;; *************** function _Lcd_Set_Cursor *****************
   811 ;; Defined at:
   812 ;;		line 41 in file "D:\mplab\pic\include\c99/lcd.h"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  a               1    wreg     unsigned char 
   815 ;;  b               1    4[BANK0 ] unsigned char 
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  a               1    6[BANK0 ] unsigned char 
   818 ;;  temp            1    9[BANK0 ] unsigned char 
   819 ;;  y               1    8[BANK0 ] unsigned char 
   820 ;;  z               1    7[BANK0 ] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0, pclath, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0
   830 ;;      Params:         0       1
   831 ;;      Locals:         0       4
   832 ;;      Temps:          0       1
   833 ;;      Totals:         0       6
   834 ;;Total ram usage:        6 bytes
   835 ;; Hardware stack levels used: 1
   836 ;; Hardware stack levels required when called: 2
   837 ;; This function calls:
   838 ;;		_Lcd_Cmd
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844     03C3                     _Lcd_Set_Cursor:	
   845                           ;psect for function _Lcd_Set_Cursor
   846                           
   847                           
   848                           ;incstack = 0
   849                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   850                           ;Lcd_Set_Cursor@a stored from wreg
   851     03C3  1283               	bcf	3,5	;RP0=0, select bank0
   852     03C4  0092               	movwf	Lcd_Set_Cursor@a
   853     03C5                     l776:
   854                           
   855                           ;D:\mplab\pic\include\c99/lcd.h: 41: void Lcd_Set_Cursor(char a, char b);D:\mplab\pic\in
      +                          clude\c99/lcd.h: 42: {;D:\mplab\pic\include\c99/lcd.h: 43:  char temp,z,y;;D:\mplab\pic\
      +                          include\c99/lcd.h: 44:  if(a == 1)
   856     03C5  0312               	decf	Lcd_Set_Cursor@a,w
   857     03C6  1D03               	btfss	3,2
   858     03C7  2BC9               	goto	u161
   859     03C8  2BCA               	goto	u160
   860     03C9                     u161:
   861     03C9  2BE1               	goto	l788
   862     03CA                     u160:
   863     03CA                     l778:
   864                           
   865                           ;D:\mplab\pic\include\c99/lcd.h: 45:  {;D:\mplab\pic\include\c99/lcd.h: 46:    temp = 0x
      +                          80 + b - 1;
   866     03CA  0810               	movf	Lcd_Set_Cursor@b,w
   867     03CB  3E7F               	addlw	127
   868     03CC  0095               	movwf	Lcd_Set_Cursor@temp
   869                           
   870                           ;D:\mplab\pic\include\c99/lcd.h: 47:   z = temp>>4;
   871     03CD  0815               	movf	Lcd_Set_Cursor@temp,w
   872     03CE  0091               	movwf	??_Lcd_Set_Cursor
   873     03CF  3004               	movlw	4
   874     03D0                     u175:
   875     03D0  1003               	clrc
   876     03D1  0C91               	rrf	??_Lcd_Set_Cursor,f
   877     03D2  3EFF               	addlw	-1
   878     03D3  1D03               	skipz
   879     03D4  2BD0               	goto	u175
   880     03D5  0811               	movf	??_Lcd_Set_Cursor,w
   881     03D6  0093               	movwf	Lcd_Set_Cursor@z
   882     03D7                     l780:
   883                           
   884                           ;D:\mplab\pic\include\c99/lcd.h: 48:   y = temp & 0x0F;
   885     03D7  0815               	movf	Lcd_Set_Cursor@temp,w
   886     03D8  0094               	movwf	Lcd_Set_Cursor@y
   887     03D9                     l782:
   888     03D9  300F               	movlw	15
   889     03DA  0594               	andwf	Lcd_Set_Cursor@y,f
   890     03DB                     l784:
   891                           
   892                           ;D:\mplab\pic\include\c99/lcd.h: 49:   Lcd_Cmd(z);
   893     03DB  0813               	movf	Lcd_Set_Cursor@z,w
   894     03DC  22F8               	fcall	_Lcd_Cmd
   895     03DD                     l786:
   896                           
   897                           ;D:\mplab\pic\include\c99/lcd.h: 50:   Lcd_Cmd(y);
   898     03DD  1283               	bcf	3,5	;RP0=0, select bank0
   899     03DE  0814               	movf	Lcd_Set_Cursor@y,w
   900     03DF  22F8               	fcall	_Lcd_Cmd
   901                           
   902                           ;D:\mplab\pic\include\c99/lcd.h: 51:  }
   903     03E0  2BFD               	goto	l39
   904     03E1                     l788:
   905     03E1  3002               	movlw	2
   906     03E2  0612               	xorwf	Lcd_Set_Cursor@a,w
   907     03E3  1D03               	btfss	3,2
   908     03E4  2BE6               	goto	u181
   909     03E5  2BE7               	goto	u180
   910     03E6                     u181:
   911     03E6  2BFD               	goto	l39
   912     03E7                     u180:
   913     03E7                     l790:
   914                           
   915                           ;D:\mplab\pic\include\c99/lcd.h: 53:  {;D:\mplab\pic\include\c99/lcd.h: 54:   temp = 0xC
      +                          0 + b - 1;
   916     03E7  0810               	movf	Lcd_Set_Cursor@b,w
   917     03E8  3EBF               	addlw	191
   918     03E9  0095               	movwf	Lcd_Set_Cursor@temp
   919                           
   920                           ;D:\mplab\pic\include\c99/lcd.h: 55:   z = temp>>4;
   921     03EA  0815               	movf	Lcd_Set_Cursor@temp,w
   922     03EB  0091               	movwf	??_Lcd_Set_Cursor
   923     03EC  3004               	movlw	4
   924     03ED                     u195:
   925     03ED  1003               	clrc
   926     03EE  0C91               	rrf	??_Lcd_Set_Cursor,f
   927     03EF  3EFF               	addlw	-1
   928     03F0  1D03               	skipz
   929     03F1  2BED               	goto	u195
   930     03F2  0811               	movf	??_Lcd_Set_Cursor,w
   931     03F3  0093               	movwf	Lcd_Set_Cursor@z
   932     03F4                     l792:
   933                           
   934                           ;D:\mplab\pic\include\c99/lcd.h: 56:   y = temp & 0x0F;
   935     03F4  0815               	movf	Lcd_Set_Cursor@temp,w
   936     03F5  0094               	movwf	Lcd_Set_Cursor@y
   937     03F6                     l794:
   938     03F6  300F               	movlw	15
   939     03F7  0594               	andwf	Lcd_Set_Cursor@y,f
   940     03F8                     l796:
   941                           
   942                           ;D:\mplab\pic\include\c99/lcd.h: 57:   Lcd_Cmd(z);
   943     03F8  0813               	movf	Lcd_Set_Cursor@z,w
   944     03F9  22F8               	fcall	_Lcd_Cmd
   945     03FA                     l798:
   946                           
   947                           ;D:\mplab\pic\include\c99/lcd.h: 58:   Lcd_Cmd(y);
   948     03FA  1283               	bcf	3,5	;RP0=0, select bank0
   949     03FB  0814               	movf	Lcd_Set_Cursor@y,w
   950     03FC  22F8               	fcall	_Lcd_Cmd
   951     03FD                     l39:
   952     03FD  0008               	return
   953     03FE                     __end_of_Lcd_Set_Cursor:
   954                           
   955                           	psect	text7
   956     02F8                     __ptext7:	
   957 ;; *************** function _Lcd_Cmd *****************
   958 ;; Defined at:
   959 ;;		line 26 in file "D:\mplab\pic\include\c99/lcd.h"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  a               1    wreg     unsigned char 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  a               1    3[BANK0 ] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0
   973 ;;      Params:         0       0
   974 ;;      Locals:         0       1
   975 ;;      Temps:          0       2
   976 ;;      Totals:         0       3
   977 ;;Total ram usage:        3 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; Hardware stack levels required when called: 1
   980 ;; This function calls:
   981 ;;		_Lcd_Port
   982 ;; This function is called by:
   983 ;;		_Lcd_Clear
   984 ;;		_Lcd_Set_Cursor
   985 ;;		_Lcd_Init
   986 ;;		_Lcd_Shift_Right
   987 ;;		_Lcd_Shift_Left
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991     02F8                     _Lcd_Cmd:	
   992                           ;psect for function _Lcd_Cmd
   993                           
   994                           
   995                           ;incstack = 0
   996                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
   997                           ;Lcd_Cmd@a stored from wreg
   998     02F8  1283               	bcf	3,5	;RP0=0, select bank0
   999     02F9  008F               	movwf	Lcd_Cmd@a
  1000     02FA                     l730:
  1001                           
  1002                           ;D:\mplab\pic\include\c99/lcd.h: 26: void Lcd_Cmd(char a);D:\mplab\pic\include\c99/lcd.h
      +                          : 27: {;D:\mplab\pic\include\c99/lcd.h: 28:  RB2 = 0;
  1003     02FA  1106               	bcf	6,2	;volatile
  1004     02FB                     l732:
  1005                           
  1006                           ;D:\mplab\pic\include\c99/lcd.h: 29:  Lcd_Port(a);
  1007     02FB  080F               	movf	Lcd_Cmd@a,w
  1008     02FC  2325               	fcall	_Lcd_Port
  1009     02FD                     l734:
  1010                           
  1011                           ;D:\mplab\pic\include\c99/lcd.h: 30:  RB3 = 1;
  1012     02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1013     02FE  1586               	bsf	6,3	;volatile
  1014     02FF                     l736:
  1015                           
  1016                           ;D:\mplab\pic\include\c99/lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)
      +                          ));
  1017     02FF  3006               	movlw	6
  1018     0300  008E               	movwf	??_Lcd_Cmd+1
  1019     0301  3030               	movlw	48
  1020     0302  008D               	movwf	??_Lcd_Cmd
  1021     0303                     u287:
  1022     0303  0B8D               	decfsz	??_Lcd_Cmd,f
  1023     0304  2B03               	goto	u287
  1024     0305  0B8E               	decfsz	??_Lcd_Cmd+1,f
  1025     0306  2B03               	goto	u287
  1026     0307  0000               	nop
  1027     0308                     l738:
  1028                           
  1029                           ;D:\mplab\pic\include\c99/lcd.h: 32:         RB3 = 0;
  1030     0308  1283               	bcf	3,5	;RP0=0, select bank0
  1031     0309  1186               	bcf	6,3	;volatile
  1032     030A                     l30:
  1033     030A  0008               	return
  1034     030B                     __end_of_Lcd_Cmd:
  1035                           
  1036                           	psect	text8
  1037     0325                     __ptext8:	
  1038 ;; *************** function _Lcd_Port *****************
  1039 ;; Defined at:
  1040 ;;		line 4 in file "D:\mplab\pic\include\c99/lcd.h"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  a               1    wreg     unsigned char 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  a               1    0[BANK0 ] unsigned char 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0
  1054 ;;      Params:         0       0
  1055 ;;      Locals:         0       1
  1056 ;;      Temps:          0       0
  1057 ;;      Totals:         0       1
  1058 ;;Total ram usage:        1 bytes
  1059 ;; Hardware stack levels used: 1
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_Lcd_Cmd
  1064 ;;		_Lcd_Init
  1065 ;;		_Lcd_Write_Char
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069     0325                     _Lcd_Port:	
  1070                           ;psect for function _Lcd_Port
  1071                           
  1072                           
  1073                           ;incstack = 0
  1074                           ; Regs used in _Lcd_Port: [wreg]
  1075                           ;Lcd_Port@a stored from wreg
  1076     0325  1283               	bcf	3,5	;RP0=0, select bank0
  1077     0326  008C               	movwf	Lcd_Port@a
  1078     0327                     l720:
  1079                           
  1080                           ;D:\mplab\pic\include\c99/lcd.h: 4: void Lcd_Port(char a);D:\mplab\pic\include\c99/lcd.h
      +                          : 5: {;D:\mplab\pic\include\c99/lcd.h: 6:  if(a & 1)
  1081     0327  1C0C               	btfss	Lcd_Port@a,0
  1082     0328  2B2A               	goto	u111
  1083     0329  2B2B               	goto	u110
  1084     032A                     u111:
  1085     032A  2B2D               	goto	l19
  1086     032B                     u110:
  1087     032B                     l722:
  1088                           
  1089                           ;D:\mplab\pic\include\c99/lcd.h: 7:   RB4 = 1;
  1090     032B  1606               	bsf	6,4	;volatile
  1091     032C  2B2E               	goto	l20
  1092     032D                     l19:	
  1093                           ;D:\mplab\pic\include\c99/lcd.h: 8:  else
  1094                           
  1095                           
  1096                           ;D:\mplab\pic\include\c99/lcd.h: 9:   RB4 = 0;
  1097     032D  1206               	bcf	6,4	;volatile
  1098     032E                     l20:
  1099                           
  1100                           ;D:\mplab\pic\include\c99/lcd.h: 11:  if(a & 2)
  1101     032E  1C8C               	btfss	Lcd_Port@a,1
  1102     032F  2B31               	goto	u121
  1103     0330  2B32               	goto	u120
  1104     0331                     u121:
  1105     0331  2B34               	goto	l21
  1106     0332                     u120:
  1107     0332                     l724:
  1108                           
  1109                           ;D:\mplab\pic\include\c99/lcd.h: 12:   RB5 = 1;
  1110     0332  1686               	bsf	6,5	;volatile
  1111     0333  2B35               	goto	l22
  1112     0334                     l21:	
  1113                           ;D:\mplab\pic\include\c99/lcd.h: 13:  else
  1114                           
  1115                           
  1116                           ;D:\mplab\pic\include\c99/lcd.h: 14:   RB5 = 0;
  1117     0334  1286               	bcf	6,5	;volatile
  1118     0335                     l22:
  1119                           
  1120                           ;D:\mplab\pic\include\c99/lcd.h: 16:  if(a & 4)
  1121     0335  1D0C               	btfss	Lcd_Port@a,2
  1122     0336  2B38               	goto	u131
  1123     0337  2B39               	goto	u130
  1124     0338                     u131:
  1125     0338  2B3B               	goto	l23
  1126     0339                     u130:
  1127     0339                     l726:
  1128                           
  1129                           ;D:\mplab\pic\include\c99/lcd.h: 17:   RB6 = 1;
  1130     0339  1706               	bsf	6,6	;volatile
  1131     033A  2B3C               	goto	l24
  1132     033B                     l23:	
  1133                           ;D:\mplab\pic\include\c99/lcd.h: 18:  else
  1134                           
  1135                           
  1136                           ;D:\mplab\pic\include\c99/lcd.h: 19:   RB6 = 0;
  1137     033B  1306               	bcf	6,6	;volatile
  1138     033C                     l24:
  1139                           
  1140                           ;D:\mplab\pic\include\c99/lcd.h: 21:  if(a & 8)
  1141     033C  1D8C               	btfss	Lcd_Port@a,3
  1142     033D  2B3F               	goto	u141
  1143     033E  2B40               	goto	u140
  1144     033F                     u141:
  1145     033F  2B42               	goto	l25
  1146     0340                     u140:
  1147     0340                     l728:
  1148                           
  1149                           ;D:\mplab\pic\include\c99/lcd.h: 22:   RB7 = 1;
  1150     0340  1786               	bsf	6,7	;volatile
  1151     0341  2B43               	goto	l27
  1152     0342                     l25:	
  1153                           ;D:\mplab\pic\include\c99/lcd.h: 23:  else
  1154                           
  1155                           
  1156                           ;D:\mplab\pic\include\c99/lcd.h: 24:   RB7 = 0;
  1157     0342  1386               	bcf	6,7	;volatile
  1158     0343                     l27:
  1159     0343  0008               	return
  1160     0344                     __end_of_Lcd_Port:
  1161     0000                     ___latbits      equ	0
  1162     004E                     btemp           set	78	;btemp
  1163     004E                     wtemp0          set	78
  1164                           
  1165                           	psect	config
  1166                           
  1167                           ;Config register CONFIG @ 0x2007
  1168                           ;	Oscillator Selection bits
  1169                           ;	FOSC = XT, XT oscillator
  1170                           ;	Watchdog Timer
  1171                           ;	WDTE = OFF, WDT disabled
  1172                           ;	Power-up Timer Enable bit
  1173                           ;	PWRTE = ON, Power-up Timer is enabled
  1174                           ;	Code Protection bit
  1175                           ;	CP = ON, All program memory is code protected
  1176     2007                     	org	8199
  1177     2007  0001               	dw	1

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     13      13

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[9]), STR_2(CODE[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1153
                                             10 BANK0      3     3      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0     406
                                              6 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     261
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     145
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     2      1     314
                                              5 BANK0      3     2      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     222
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     433
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     145
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     116
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON            0      0       0      0.0%
BITBANK0            66      0       0      0.0%
COMMON               0      0       0      0.0%
BANK0               66     13      13     19.7%
STACK                0      0       0      0.0%
DATA                 0      0      13      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Dec 25 21:35:29 2024

                       pc 0002                        l20 032E                        l21 0334  
                      l22 0335                        l30 030A                        l23 033B  
                      l24 033C                        l25 0342                        l33 02E8  
                      l42 03C2                        l27 0343                        l19 032D  
                      l51 0324                        l60 02F7                        l45 038E  
                      l39 03FD                        l65 0345                        fsr 0004  
                     l720 0327                       l800 030B                       l722 032B  
                     l730 02FA                       l802 030F                       l810 02EB  
                     l724 0332                       l732 02FB                       l804 0314  
                     l740 02E4                       l812 02EC                       l820 0344  
                     l726 0339                       l734 02FD                       l806 031B  
                     l750 03A8                       l742 038F                       l814 02F6  
                     l822 034A                       l728 0340                       l736 02FF  
                     l760 0372                       l752 0369                       l744 0391  
                     l808 02E9                       l824 034E                       l738 0308  
                     l770 0386                       l762 037C                       l754 036B  
                     l746 039B                       l826 0357                       l780 03D7  
                     l772 0388                       l764 037E                       l756 036D  
                     l748 03A6                       l790 03E7                       l782 03D9  
                     l774 038C                       l766 0382                       l758 0371  
                     l792 03F4                       l784 03DB                       l776 03C5  
                     l768 0384                       l794 03F6                       l786 03DD  
                     l778 03CA                       l796 03F8                       l788 03E1  
                     l798 03FA                       _RB2 0032                       _RB3 0033  
                     _RB4 0034                       _RB5 0035                       _RB6 0036  
                     _RB7 0037                       u110 032B                       u111 032A  
                     u120 0332                       u200 0324                       u121 0331  
                     u201 0323                       u130 0339                       u131 0338  
                     u140 0340                       u141 033F                       u160 03CA  
                     u161 03C9                       u217 035E                       u155 0375  
                     u227 02F1                       u180 03E7                       u181 03E6  
                     u237 0396                       u175 03D0                       u247 03A2  
                     u257 03AD                       u195 03ED                       u267 0380  
                     u277 038A                       u287 0303                       fsr0 0004  
                    STR_1 0011                      STR_2 0007         ?_Lcd_Write_String 0011  
                    _main 0344                      btemp 004E                      start 0000  
      ??_Lcd_Write_String 0000           __end_of_Lcd_Cmd 030B                     ?_main 000C  
                   _TRISB 0086                     _setup 02E9                     pclath 000A  
                   status 0003                     wtemp0 004E          __end_of_Lcd_Init 03C3  
        __end_of_Lcd_Port 0344           __initialization 03FE              __end_of_main 0367  
                  ??_main 0016                    ?_setup 000C                 ??_Lcd_Cmd 000D  
         Lcd_Set_Cursor@a 0012           Lcd_Set_Cursor@b 0010           Lcd_Set_Cursor@y 0014  
         Lcd_Set_Cursor@z 0013   __end_of__initialization 03FE         __end_of_Lcd_Clear 02E9  
          __pcstackCOMMON 0000             __end_of_setup 02F8            _Lcd_Set_Cursor 03C3  
               ?_Lcd_Init 000C                 ?_Lcd_Port 000C                   ??_setup 0012  
              __pmaintext 0344    __end_of_Lcd_Set_Cursor 03FE                ??_Lcd_Init 0010  
              ??_Lcd_Port 0000                __stringtab 0001            _Lcd_Write_Char 0367  
                 _Lcd_Cmd 02F8           ?_Lcd_Set_Cursor 0010                   __ptext1 02E9  
                 __ptext2 038F                   __ptext3 02E4                   __ptext4 030B  
                 __ptext5 0367                   __ptext6 03C3                   __ptext7 02F8  
                 __ptext8 0325    __end_of_Lcd_Write_Char 038F      end_of_initialization 03FE  
               Lcd_Port@a 000C           ?_Lcd_Write_Char 000C         Lcd_Write_String@a 0011  
       Lcd_Write_String@i 0012                 _Lcd_Clear 02E4          _Lcd_Write_String 030B  
     start_initialization 03FE                ?_Lcd_Clear 000C           Lcd_Write_Char@a 0010  
         Lcd_Write_Char@y 000F                 ___latbits 0000             __pcstackBANK0 000C  
                ?_Lcd_Cmd 000C          ??_Lcd_Set_Cursor 0011                 __pstrings 0001  
                Lcd_Cmd@a 000F               ??_Lcd_Clear 0000               __stringbase 0006  
        ??_Lcd_Write_Char 000D                  _Lcd_Init 038F                  _Lcd_Port 0325  
__end_of_Lcd_Write_String 0325        __end_of__stringtab 0007        Lcd_Write_Char@temp 000E  
               stringcode 0001        Lcd_Set_Cursor@temp 0015                  stringdir 0001  
                stringtab 0001  
