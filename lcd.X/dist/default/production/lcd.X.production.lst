

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Dec 28 15:58:56 2024

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x4E,2
    19     0000                     
    20                           ; Generated 12/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F84A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0004                     fsr             equ	4
    55     0004                     fsr0            equ	4
    56     0000                     indf            equ	0
    57     0000                     indf0           equ	0
    58     0002                     pc              equ	2
    59     0002                     pcl             equ	2
    60     000A                     pclath          equ	10
    61     0003                     status          equ	3
    62     0000                     INDF            equ	0	;# 
    63     0001                     TMR0            equ	1	;# 
    64     0002                     PCL             equ	2	;# 
    65     0003                     STATUS          equ	3	;# 
    66     0004                     FSR             equ	4	;# 
    67     0005                     PORTA           equ	5	;# 
    68     0006                     PORTB           equ	6	;# 
    69     0008                     EEDATA          equ	8	;# 
    70     0009                     EEADR           equ	9	;# 
    71     000A                     PCLATH          equ	10	;# 
    72     000B                     INTCON          equ	11	;# 
    73     0081                     OPTION_REG      equ	129	;# 
    74     0085                     TRISA           equ	133	;# 
    75     0086                     TRISB           equ	134	;# 
    76     0088                     EECON1          equ	136	;# 
    77     0089                     EECON2          equ	137	;# 
    78     0000                     INDF            equ	0	;# 
    79     0001                     TMR0            equ	1	;# 
    80     0002                     PCL             equ	2	;# 
    81     0003                     STATUS          equ	3	;# 
    82     0004                     FSR             equ	4	;# 
    83     0005                     PORTA           equ	5	;# 
    84     0006                     PORTB           equ	6	;# 
    85     0008                     EEDATA          equ	8	;# 
    86     0009                     EEADR           equ	9	;# 
    87     000A                     PCLATH          equ	10	;# 
    88     000B                     INTCON          equ	11	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISA           equ	133	;# 
    91     0086                     TRISB           equ	134	;# 
    92     0088                     EECON1          equ	136	;# 
    93     0089                     EECON2          equ	137	;# 
    94     0033                     _RB3            set	51
    95     0032                     _RB2            set	50
    96     0037                     _RB7            set	55
    97     0036                     _RB6            set	54
    98     0035                     _RB5            set	53
    99     0034                     _RB4            set	52
   100     0086                     _TRISB          set	134
   101                           
   102                           	psect	strings
   103     0001                     __pstrings:
   104     0001                     stringtab:
   105     0001                     __stringtab:
   106     0001                     stringcode:	
   107                           ;	String table - string pointers are 1 byte each
   108                           
   109     0001                     stringdir:
   110     0001  3000               	movlw	high stringdir
   111     0002  008A               	movwf	10
   112     0003  0804               	movf	4,w
   113     0004  0A84               	incf	4,f
   114     0005  0782               	addwf	2,f
   115     0006                     __stringbase:
   116     0006  3400               	retlw	0
   117     0007                     __end_of__stringtab:
   118     0007                     STR_2:
   119     0007  3443               	retlw	67	;'C'
   120     0008  3461               	retlw	97	;'a'
   121     0009  346C               	retlw	108	;'l'
   122     000A  3469               	retlw	105	;'i'
   123     000B  3473               	retlw	115	;'s'
   124     000C  3469               	retlw	105	;'i'
   125     000D  3479               	retlw	121	;'y'
   126     000E  346F               	retlw	111	;'o'
   127     000F  3472               	retlw	114	;'r'
   128     0010  3400               	retlw	0
   129     0011                     STR_1:
   130     0011  3453               	retlw	83	;'S'
   131     0012  346F               	retlw	111	;'o'
   132     0013  3472               	retlw	114	;'r'
   133     0014  3475               	retlw	117	;'u'
   134     0015  346E               	retlw	110	;'n'
   135     0016  3473               	retlw	115	;'s'
   136     0017  3475               	retlw	117	;'u'
   137     0018  347A               	retlw	122	;'z'
   138     0019  3400               	retlw	0
   139                           
   140                           	psect	cinit
   141     03FE                     start_initialization:	
   142                           ; #config settings
   143                           
   144     03FE                     __initialization:
   145     03FE                     end_of_initialization:	
   146                           ;End of C runtime variable initialization code
   147                           
   148     03FE                     __end_of__initialization:
   149     03FE  0183               	clrf	3
   150     03FF  2B45               	ljmp	_main	;jump to C main() function
   151                           
   152                           	psect	cstackCOMMON
   153     0000                     __pcstackCOMMON:
   154     0000                     ??_Lcd_Port:
   155     0000                     ??_Lcd_Clear:	
   156                           ; 1 bytes @ 0x0
   157                           
   158     0000                     ??_Lcd_Write_String:	
   159                           ; 1 bytes @ 0x0
   160                           
   161                           
   162                           	psect	cstackBANK0
   163     000C                     __pcstackBANK0:	
   164                           ; 1 bytes @ 0x0
   165                           
   166     000C                     ?_Lcd_Port:
   167     000C                     ?_Lcd_Cmd:	
   168                           ; 1 bytes @ 0x0
   169                           
   170     000C                     ?_Lcd_Init:	
   171                           ; 1 bytes @ 0x0
   172                           
   173     000C                     ?_Lcd_Write_Char:	
   174                           ; 1 bytes @ 0x0
   175                           
   176     000C                     ?_setup:	
   177                           ; 1 bytes @ 0x0
   178                           
   179     000C                     ?_main:	
   180                           ; 1 bytes @ 0x0
   181                           
   182     000C                     ?_Lcd_Clear:	
   183                           ; 1 bytes @ 0x0
   184                           
   185     000C                     Lcd_Port@a:	
   186                           ; 2 bytes @ 0x0
   187                           
   188                           
   189                           ; 1 bytes @ 0x0
   190     000C                     	ds	1
   191     000D                     ??_Lcd_Cmd:
   192     000D                     ??_Lcd_Write_Char:	
   193                           ; 1 bytes @ 0x1
   194                           
   195                           
   196                           ; 1 bytes @ 0x1
   197     000D                     	ds	1
   198     000E                     Lcd_Write_Char@temp:
   199                           
   200                           ; 1 bytes @ 0x2
   201     000E                     	ds	1
   202     000F                     Lcd_Cmd@a:
   203     000F                     Lcd_Write_Char@y:	
   204                           ; 1 bytes @ 0x3
   205                           
   206                           
   207                           ; 1 bytes @ 0x3
   208     000F                     	ds	1
   209     0010                     ?_Lcd_Set_Cursor:
   210     0010                     Lcd_Set_Cursor@b:	
   211                           ; 1 bytes @ 0x4
   212                           
   213     0010                     Lcd_Write_Char@a:	
   214                           ; 1 bytes @ 0x4
   215                           
   216     0010                     ??_Lcd_Init:	
   217                           ; 1 bytes @ 0x4
   218                           
   219                           
   220                           ; 1 bytes @ 0x4
   221     0010                     	ds	1
   222     0011                     ?_Lcd_Write_String:
   223     0011                     Lcd_Write_String@a:	
   224                           ; 1 bytes @ 0x5
   225                           
   226     0011                     ??_Lcd_Set_Cursor:	
   227                           ; 1 bytes @ 0x5
   228                           
   229                           
   230                           ; 1 bytes @ 0x5
   231     0011                     	ds	1
   232     0012                     Lcd_Set_Cursor@a:
   233     0012                     Lcd_Write_String@i:	
   234                           ; 1 bytes @ 0x6
   235                           
   236     0012                     ??_setup:	
   237                           ; 2 bytes @ 0x6
   238                           
   239                           
   240                           ; 1 bytes @ 0x6
   241     0012                     	ds	1
   242     0013                     Lcd_Set_Cursor@z:
   243                           
   244                           ; 1 bytes @ 0x7
   245     0013                     	ds	1
   246     0014                     Lcd_Set_Cursor@y:
   247                           
   248                           ; 1 bytes @ 0x8
   249     0014                     	ds	1
   250     0015                     Lcd_Set_Cursor@temp:
   251                           
   252                           ; 1 bytes @ 0x9
   253     0015                     	ds	1
   254     0016                     ??_main:
   255                           
   256                           ; 1 bytes @ 0xA
   257     0016                     	ds	3
   258                           
   259                           	psect	maintext
   260     0345                     __pmaintext:	
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 25 in file "main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : B00/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMMON   BANK0
   280 ;;      Params:         0       0
   281 ;;      Locals:         0       0
   282 ;;      Temps:          0       3
   283 ;;      Totals:         0       3
   284 ;;Total ram usage:        3 bytes
   285 ;; Hardware stack levels required when called: 4
   286 ;; This function calls:
   287 ;;		_Lcd_Set_Cursor
   288 ;;		_Lcd_Write_String
   289 ;;		_setup
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295     0345                     _main:	
   296                           ;psect for function _main
   297                           
   298     0345                     l817:	
   299                           ;incstack = 0
   300                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   301                           
   302                           
   303                           ;main.c: 26:     setup();
   304     0345  22EA               	fcall	_setup
   305                           
   306                           ;main.c: 28:     Lcd_Set_Cursor(1, 5);
   307     0346  3005               	movlw	5
   308     0347  1283               	bcf	3,5	;RP0=0, select bank0
   309     0348  0090               	movwf	Lcd_Set_Cursor@b
   310     0349  3001               	movlw	1
   311     034A  23C3               	fcall	_Lcd_Set_Cursor
   312     034B                     l819:
   313                           
   314                           ;main.c: 29:     Lcd_Write_String("Sorunsuz");
   315     034B  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   316     034C  1283               	bcf	3,5	;RP0=0, select bank0
   317     034D  0091               	movwf	Lcd_Write_String@a
   318     034E  230C               	fcall	_Lcd_Write_String
   319     034F                     l821:
   320                           
   321                           ;main.c: 31:     Lcd_Set_Cursor(2, 6);
   322     034F  3006               	movlw	6
   323     0350  1283               	bcf	3,5	;RP0=0, select bank0
   324     0351  0090               	movwf	Lcd_Set_Cursor@b
   325     0352  3002               	movlw	2
   326     0353  23C3               	fcall	_Lcd_Set_Cursor
   327                           
   328                           ;main.c: 32:     Lcd_Write_String("Calisiyor");
   329     0354  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   330     0355  1283               	bcf	3,5	;RP0=0, select bank0
   331     0356  0091               	movwf	Lcd_Write_String@a
   332     0357  230C               	fcall	_Lcd_Write_String
   333     0358                     l823:
   334                           
   335                           ;main.c: 34:     _delay((unsigned long)((3000)*(4000000/4000.0)));
   336     0358  3010               	movlw	16
   337     0359  1283               	bcf	3,5	;RP0=0, select bank0
   338     035A  0098               	movwf	??_main+2
   339     035B  3039               	movlw	57
   340     035C  0097               	movwf	??_main+1
   341     035D  300D               	movlw	13
   342     035E  0096               	movwf	??_main
   343     035F                     u217:
   344     035F  0B96               	decfsz	??_main,f
   345     0360  2B5F               	goto	u217
   346     0361  0B97               	decfsz	??_main+1,f
   347     0362  2B5F               	goto	u217
   348     0363  0B98               	decfsz	??_main+2,f
   349     0364  2B5F               	goto	u217
   350     0365  2B66               	nop2
   351     0366                     l65:
   352     0366  2800               	ljmp	start
   353     0367                     __end_of_main:
   354                           
   355                           	psect	text1
   356     02EA                     __ptext1:	
   357 ;; *************** function _setup *****************
   358 ;; Defined at:
   359 ;;		line 18 in file "main.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;		None
   364 ;; Return value:  Size  Location     Type
   365 ;;                  1    wreg      void 
   366 ;; Registers used:
   367 ;;		wreg, status,2, status,0, pclath, cstack
   368 ;; Tracked objects:
   369 ;;		On entry : 0/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMMON   BANK0
   373 ;;      Params:         0       0
   374 ;;      Locals:         0       0
   375 ;;      Temps:          0       2
   376 ;;      Totals:         0       2
   377 ;;Total ram usage:        2 bytes
   378 ;; Hardware stack levels used: 1
   379 ;; Hardware stack levels required when called: 3
   380 ;; This function calls:
   381 ;;		_Lcd_Clear
   382 ;;		_Lcd_Init
   383 ;; This function is called by:
   384 ;;		_main
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388     02EA                     _setup:	
   389                           ;psect for function _setup
   390                           
   391     02EA                     l805:	
   392                           ;incstack = 0
   393                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   394                           
   395                           
   396                           ;main.c: 19:     TRISB = 0x00;
   397     02EA  1683               	bsf	3,5	;RP0=1, select bank1
   398     02EB  0186               	clrf	6	;volatile
   399     02EC                     l807:
   400                           
   401                           ;main.c: 20:     Lcd_Init();
   402     02EC  238F               	fcall	_Lcd_Init
   403     02ED                     l809:
   404                           
   405                           ;main.c: 21:     _delay((unsigned long)((50)*(4000000/4000.0)));
   406     02ED  3041               	movlw	65
   407     02EE  1283               	bcf	3,5	;RP0=0, select bank0
   408     02EF  0093               	movwf	??_setup+1
   409     02F0  30EE               	movlw	238
   410     02F1  0092               	movwf	??_setup
   411     02F2                     u227:
   412     02F2  0B92               	decfsz	??_setup,f
   413     02F3  2AF2               	goto	u227
   414     02F4  0B93               	decfsz	??_setup+1,f
   415     02F5  2AF2               	goto	u227
   416     02F6  0000               	nop
   417     02F7                     l811:
   418                           
   419                           ;main.c: 22:     Lcd_Clear();
   420     02F7  22E5               	fcall	_Lcd_Clear
   421     02F8                     l60:
   422     02F8  0008               	return
   423     02F9                     __end_of_setup:
   424                           
   425                           	psect	text2
   426     038F                     __ptext2:	
   427 ;; *************** function _Lcd_Init *****************
   428 ;; Defined at:
   429 ;;		line 62 in file "D:\mplab\pic\include\c99/lcd.h"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, status,2, status,0, pclath, cstack
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMMON   BANK0
   443 ;;      Params:         0       0
   444 ;;      Locals:         0       0
   445 ;;      Temps:          0       2
   446 ;;      Totals:         0       2
   447 ;;Total ram usage:        2 bytes
   448 ;; Hardware stack levels used: 1
   449 ;; Hardware stack levels required when called: 2
   450 ;; This function calls:
   451 ;;		_Lcd_Cmd
   452 ;;		_Lcd_Port
   453 ;; This function is called by:
   454 ;;		_setup
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458     038F                     _Lcd_Init:	
   459                           ;psect for function _Lcd_Init
   460                           
   461     038F                     l739:	
   462                           ;incstack = 0
   463                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   464                           
   465                           
   466                           ;D:\mplab\pic\include\c99/lcd.h: 64:   Lcd_Port(0x00);
   467     038F  3000               	movlw	0
   468     0390  2326               	fcall	_Lcd_Port
   469     0391                     l741:
   470                           
   471                           ;D:\mplab\pic\include\c99/lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
   472     0391  301A               	movlw	26
   473     0392  1283               	bcf	3,5	;RP0=0, select bank0
   474     0393  0091               	movwf	??_Lcd_Init+1
   475     0394  30F8               	movlw	248
   476     0395  0090               	movwf	??_Lcd_Init
   477     0396                     u237:
   478     0396  0B90               	decfsz	??_Lcd_Init,f
   479     0397  2B96               	goto	u237
   480     0398  0B91               	decfsz	??_Lcd_Init+1,f
   481     0399  2B96               	goto	u237
   482     039A  0000               	nop
   483     039B                     l743:
   484                           
   485                           ;D:\mplab\pic\include\c99/lcd.h: 66:   Lcd_Cmd(0x03);
   486     039B  3003               	movlw	3
   487     039C  22F9               	fcall	_Lcd_Cmd
   488                           
   489                           ;D:\mplab\pic\include\c99/lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
   490     039D  3007               	movlw	7
   491     039E  1283               	bcf	3,5	;RP0=0, select bank0
   492     039F  0091               	movwf	??_Lcd_Init+1
   493     03A0  307D               	movlw	125
   494     03A1  0090               	movwf	??_Lcd_Init
   495     03A2                     u247:
   496     03A2  0B90               	decfsz	??_Lcd_Init,f
   497     03A3  2BA2               	goto	u247
   498     03A4  0B91               	decfsz	??_Lcd_Init+1,f
   499     03A5  2BA2               	goto	u247
   500     03A6                     l745:
   501                           
   502                           ;D:\mplab\pic\include\c99/lcd.h: 68:   Lcd_Cmd(0x03);
   503     03A6  3003               	movlw	3
   504     03A7  22F9               	fcall	_Lcd_Cmd
   505     03A8                     l747:
   506                           
   507                           ;D:\mplab\pic\include\c99/lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
   508     03A8  300F               	movlw	15
   509     03A9  1283               	bcf	3,5	;RP0=0, select bank0
   510     03AA  0091               	movwf	??_Lcd_Init+1
   511     03AB  3047               	movlw	71
   512     03AC  0090               	movwf	??_Lcd_Init
   513     03AD                     u257:
   514     03AD  0B90               	decfsz	??_Lcd_Init,f
   515     03AE  2BAD               	goto	u257
   516     03AF  0B91               	decfsz	??_Lcd_Init+1,f
   517     03B0  2BAD               	goto	u257
   518     03B1  2BB2               	nop2
   519                           
   520                           ;D:\mplab\pic\include\c99/lcd.h: 70:   Lcd_Cmd(0x03);
   521     03B2  3003               	movlw	3
   522     03B3  22F9               	fcall	_Lcd_Cmd
   523                           
   524                           ;D:\mplab\pic\include\c99/lcd.h: 72:   Lcd_Cmd(0x02);
   525     03B4  3002               	movlw	2
   526     03B5  22F9               	fcall	_Lcd_Cmd
   527                           
   528                           ;D:\mplab\pic\include\c99/lcd.h: 73:   Lcd_Cmd(0x02);
   529     03B6  3002               	movlw	2
   530     03B7  22F9               	fcall	_Lcd_Cmd
   531                           
   532                           ;D:\mplab\pic\include\c99/lcd.h: 74:   Lcd_Cmd(0x08);
   533     03B8  3008               	movlw	8
   534     03B9  22F9               	fcall	_Lcd_Cmd
   535                           
   536                           ;D:\mplab\pic\include\c99/lcd.h: 75:   Lcd_Cmd(0x00);
   537     03BA  3000               	movlw	0
   538     03BB  22F9               	fcall	_Lcd_Cmd
   539                           
   540                           ;D:\mplab\pic\include\c99/lcd.h: 76:   Lcd_Cmd(0x0C);
   541     03BC  300C               	movlw	12
   542     03BD  22F9               	fcall	_Lcd_Cmd
   543                           
   544                           ;D:\mplab\pic\include\c99/lcd.h: 77:   Lcd_Cmd(0x00);
   545     03BE  3000               	movlw	0
   546     03BF  22F9               	fcall	_Lcd_Cmd
   547                           
   548                           ;D:\mplab\pic\include\c99/lcd.h: 78:   Lcd_Cmd(0x06);
   549     03C0  3006               	movlw	6
   550     03C1  22F9               	fcall	_Lcd_Cmd
   551     03C2                     l42:
   552     03C2  0008               	return
   553     03C3                     __end_of_Lcd_Init:
   554                           
   555                           	psect	text3
   556     02E5                     __ptext3:	
   557 ;; *************** function _Lcd_Clear *****************
   558 ;; Defined at:
   559 ;;		line 35 in file "D:\mplab\pic\include\c99/lcd.h"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  2   32[None  ] int 
   566 ;; Registers used:
   567 ;;		wreg, status,2, status,0, pclath, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0
   573 ;;      Params:         0       0
   574 ;;      Locals:         0       0
   575 ;;      Temps:          0       0
   576 ;;      Totals:         0       0
   577 ;;Total ram usage:        0 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; Hardware stack levels required when called: 2
   580 ;; This function calls:
   581 ;;		_Lcd_Cmd
   582 ;; This function is called by:
   583 ;;		_setup
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587     02E5                     _Lcd_Clear:	
   588                           ;psect for function _Lcd_Clear
   589                           
   590     02E5                     l737:	
   591                           ;incstack = 0
   592                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
   593                           
   594                           
   595                           ;D:\mplab\pic\include\c99/lcd.h: 37:  Lcd_Cmd(0);
   596     02E5  3000               	movlw	0
   597     02E6  22F9               	fcall	_Lcd_Cmd
   598                           
   599                           ;D:\mplab\pic\include\c99/lcd.h: 38:  Lcd_Cmd(1);
   600     02E7  3001               	movlw	1
   601     02E8  22F9               	fcall	_Lcd_Cmd
   602     02E9                     l33:
   603     02E9  0008               	return
   604     02EA                     __end_of_Lcd_Clear:
   605                           
   606                           	psect	text4
   607     030C                     __ptext4:	
   608 ;; *************** function _Lcd_Write_String *****************
   609 ;; Defined at:
   610 ;;		line 97 in file "D:\mplab\pic\include\c99/lcd.h"
   611 ;; Parameters:    Size  Location     Type
   612 ;;  a               1    5[BANK0 ] PTR unsigned char 
   613 ;;		 -> STR_2(10), STR_1(9), 
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  i               2    6[BANK0 ] int 
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0
   625 ;;      Params:         0       1
   626 ;;      Locals:         0       2
   627 ;;      Temps:          0       0
   628 ;;      Totals:         0       3
   629 ;;Total ram usage:        3 bytes
   630 ;; Hardware stack levels used: 1
   631 ;; Hardware stack levels required when called: 2
   632 ;; This function calls:
   633 ;;		_Lcd_Write_Char
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639     030C                     _Lcd_Write_String:	
   640                           ;psect for function _Lcd_Write_String
   641                           
   642     030C                     l797:	
   643                           ;incstack = 0
   644                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   645                           
   646                           
   647                           ;D:\mplab\pic\include\c99/lcd.h: 97: void Lcd_Write_String(char *a);D:\mplab\pic\include
      +                          \c99/lcd.h: 98: {;D:\mplab\pic\include\c99/lcd.h: 99:  int i;;D:\mplab\pic\include\c99/l
      +                          cd.h: 100:  for(i=0;a[i]!='\0';i++)
   648     030C  1283               	bcf	3,5	;RP0=0, select bank0
   649     030D  0192               	clrf	Lcd_Write_String@i
   650     030E  0193               	clrf	Lcd_Write_String@i+1
   651     030F  2B1C               	goto	l803
   652     0310                     l799:
   653                           
   654                           ;D:\mplab\pic\include\c99/lcd.h: 101:     Lcd_Write_Char(a[i]);
   655     0310  0812               	movf	Lcd_Write_String@i,w
   656     0311  0711               	addwf	Lcd_Write_String@a,w
   657     0312  0084               	movwf	4
   658     0313  2001               	fcall	stringdir
   659     0314  2367               	fcall	_Lcd_Write_Char
   660     0315                     l801:
   661     0315  3001               	movlw	1
   662     0316  1283               	bcf	3,5	;RP0=0, select bank0
   663     0317  0792               	addwf	Lcd_Write_String@i,f
   664     0318  1803               	skipnc
   665     0319  0A93               	incf	Lcd_Write_String@i+1,f
   666     031A  3000               	movlw	0
   667     031B  0793               	addwf	Lcd_Write_String@i+1,f
   668     031C                     l803:
   669     031C  0812               	movf	Lcd_Write_String@i,w
   670     031D  0711               	addwf	Lcd_Write_String@a,w
   671     031E  0084               	movwf	4
   672     031F  2001               	fcall	stringdir
   673     0320  3A00               	xorlw	0
   674     0321  1D03               	skipz
   675     0322  2B24               	goto	u201
   676     0323  2B25               	goto	u200
   677     0324                     u201:
   678     0324  2B10               	goto	l799
   679     0325                     u200:
   680     0325                     l51:
   681     0325  0008               	return
   682     0326                     __end_of_Lcd_Write_String:
   683                           
   684                           	psect	text5
   685     0367                     __ptext5:	
   686 ;; *************** function _Lcd_Write_Char *****************
   687 ;; Defined at:
   688 ;;		line 81 in file "D:\mplab\pic\include\c99/lcd.h"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  a               1    wreg     unsigned char 
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  a               1    4[BANK0 ] unsigned char 
   693 ;;  y               1    3[BANK0 ] unsigned char 
   694 ;;  temp            1    2[BANK0 ] unsigned char 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0, pclath, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0
   704 ;;      Params:         0       0
   705 ;;      Locals:         0       3
   706 ;;      Temps:          0       1
   707 ;;      Totals:         0       4
   708 ;;Total ram usage:        4 bytes
   709 ;; Hardware stack levels used: 1
   710 ;; Hardware stack levels required when called: 1
   711 ;; This function calls:
   712 ;;		_Lcd_Port
   713 ;; This function is called by:
   714 ;;		_Lcd_Write_String
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718     0367                     _Lcd_Write_Char:	
   719                           ;psect for function _Lcd_Write_Char
   720                           
   721                           
   722                           ;incstack = 0
   723                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   724                           ;Lcd_Write_Char@a stored from wreg
   725     0367  1283               	bcf	3,5	;RP0=0, select bank0
   726     0368  0090               	movwf	Lcd_Write_Char@a
   727     0369                     l749:
   728                           
   729                           ;D:\mplab\pic\include\c99/lcd.h: 81: void Lcd_Write_Char(char a);D:\mplab\pic\include\c9
      +                          9/lcd.h: 82: {;D:\mplab\pic\include\c99/lcd.h: 83:    char temp,y;;D:\mplab\pic\include\
      +                          c99/lcd.h: 84:    temp = a&0x0F;
   730     0369  0810               	movf	Lcd_Write_Char@a,w
   731     036A  008E               	movwf	Lcd_Write_Char@temp
   732     036B                     l751:
   733     036B  300F               	movlw	15
   734     036C  058E               	andwf	Lcd_Write_Char@temp,f
   735     036D                     l753:
   736                           
   737                           ;D:\mplab\pic\include\c99/lcd.h: 85:    y = a&0xF0;
   738     036D  0810               	movf	Lcd_Write_Char@a,w
   739     036E  008F               	movwf	Lcd_Write_Char@y
   740     036F  30F0               	movlw	240
   741     0370  058F               	andwf	Lcd_Write_Char@y,f
   742     0371                     l755:
   743                           
   744                           ;D:\mplab\pic\include\c99/lcd.h: 86:    RB2 = 1;
   745     0371  1506               	bsf	6,2	;volatile
   746     0372                     l757:
   747                           
   748                           ;D:\mplab\pic\include\c99/lcd.h: 87:    Lcd_Port(y>>4);
   749     0372  080F               	movf	Lcd_Write_Char@y,w
   750     0373  008D               	movwf	??_Lcd_Write_Char
   751     0374  3004               	movlw	4
   752     0375                     u155:
   753     0375  1003               	clrc
   754     0376  0C8D               	rrf	??_Lcd_Write_Char,f
   755     0377  3EFF               	addlw	-1
   756     0378  1D03               	skipz
   757     0379  2B75               	goto	u155
   758     037A  080D               	movf	??_Lcd_Write_Char,w
   759     037B  2326               	fcall	_Lcd_Port
   760     037C                     l759:
   761                           
   762                           ;D:\mplab\pic\include\c99/lcd.h: 88:    RB3 = 1;
   763     037C  1283               	bcf	3,5	;RP0=0, select bank0
   764     037D  1586               	bsf	6,3	;volatile
   765     037E                     l761:
   766                           
   767                           ;D:\mplab\pic\include\c99/lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0))
      +                          );
   768     037E  300D               	movlw	13
   769     037F  008D               	movwf	??_Lcd_Write_Char
   770     0380                     u267:
   771     0380  0B8D               	decfsz	??_Lcd_Write_Char,f
   772     0381  2B80               	goto	u267
   773     0382                     l763:
   774                           
   775                           ;D:\mplab\pic\include\c99/lcd.h: 90:    RB3 = 0;
   776     0382  1283               	bcf	3,5	;RP0=0, select bank0
   777     0383  1186               	bcf	6,3	;volatile
   778     0384                     l765:
   779                           
   780                           ;D:\mplab\pic\include\c99/lcd.h: 91:    Lcd_Port(temp);
   781     0384  080E               	movf	Lcd_Write_Char@temp,w
   782     0385  2326               	fcall	_Lcd_Port
   783     0386                     l767:
   784                           
   785                           ;D:\mplab\pic\include\c99/lcd.h: 92:    RB3 = 1;
   786     0386  1283               	bcf	3,5	;RP0=0, select bank0
   787     0387  1586               	bsf	6,3	;volatile
   788     0388                     l769:
   789                           
   790                           ;D:\mplab\pic\include\c99/lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0))
      +                          );
   791     0388  300D               	movlw	13
   792     0389  008D               	movwf	??_Lcd_Write_Char
   793     038A                     u277:
   794     038A  0B8D               	decfsz	??_Lcd_Write_Char,f
   795     038B  2B8A               	goto	u277
   796     038C                     l771:
   797                           
   798                           ;D:\mplab\pic\include\c99/lcd.h: 94:    RB3 = 0;
   799     038C  1283               	bcf	3,5	;RP0=0, select bank0
   800     038D  1186               	bcf	6,3	;volatile
   801     038E                     l45:
   802     038E  0008               	return
   803     038F                     __end_of_Lcd_Write_Char:
   804                           
   805                           	psect	text6
   806     03C3                     __ptext6:	
   807 ;; *************** function _Lcd_Set_Cursor *****************
   808 ;; Defined at:
   809 ;;		line 41 in file "D:\mplab\pic\include\c99/lcd.h"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  a               1    wreg     unsigned char 
   812 ;;  b               1    4[BANK0 ] unsigned char 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  a               1    6[BANK0 ] unsigned char 
   815 ;;  temp            1    9[BANK0 ] unsigned char 
   816 ;;  y               1    8[BANK0 ] unsigned char 
   817 ;;  z               1    7[BANK0 ] unsigned char 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0, pclath, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0
   827 ;;      Params:         0       1
   828 ;;      Locals:         0       4
   829 ;;      Temps:          0       1
   830 ;;      Totals:         0       6
   831 ;;Total ram usage:        6 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 2
   834 ;; This function calls:
   835 ;;		_Lcd_Cmd
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841     03C3                     _Lcd_Set_Cursor:	
   842                           ;psect for function _Lcd_Set_Cursor
   843                           
   844                           
   845                           ;incstack = 0
   846                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   847                           ;Lcd_Set_Cursor@a stored from wreg
   848     03C3  1283               	bcf	3,5	;RP0=0, select bank0
   849     03C4  0092               	movwf	Lcd_Set_Cursor@a
   850     03C5                     l773:
   851                           
   852                           ;D:\mplab\pic\include\c99/lcd.h: 41: void Lcd_Set_Cursor(char a, char b);D:\mplab\pic\in
      +                          clude\c99/lcd.h: 42: {;D:\mplab\pic\include\c99/lcd.h: 43:  char temp,z,y;;D:\mplab\pic\
      +                          include\c99/lcd.h: 44:  if(a == 1)
   853     03C5  0312               	decf	Lcd_Set_Cursor@a,w
   854     03C6  1D03               	btfss	3,2
   855     03C7  2BC9               	goto	u161
   856     03C8  2BCA               	goto	u160
   857     03C9                     u161:
   858     03C9  2BE1               	goto	l785
   859     03CA                     u160:
   860     03CA                     l775:
   861                           
   862                           ;D:\mplab\pic\include\c99/lcd.h: 45:  {;D:\mplab\pic\include\c99/lcd.h: 46:    temp = 0x
      +                          80 + b - 1;
   863     03CA  0810               	movf	Lcd_Set_Cursor@b,w
   864     03CB  3E7F               	addlw	127
   865     03CC  0095               	movwf	Lcd_Set_Cursor@temp
   866                           
   867                           ;D:\mplab\pic\include\c99/lcd.h: 47:   z = temp>>4;
   868     03CD  0815               	movf	Lcd_Set_Cursor@temp,w
   869     03CE  0091               	movwf	??_Lcd_Set_Cursor
   870     03CF  3004               	movlw	4
   871     03D0                     u175:
   872     03D0  1003               	clrc
   873     03D1  0C91               	rrf	??_Lcd_Set_Cursor,f
   874     03D2  3EFF               	addlw	-1
   875     03D3  1D03               	skipz
   876     03D4  2BD0               	goto	u175
   877     03D5  0811               	movf	??_Lcd_Set_Cursor,w
   878     03D6  0093               	movwf	Lcd_Set_Cursor@z
   879     03D7                     l777:
   880                           
   881                           ;D:\mplab\pic\include\c99/lcd.h: 48:   y = temp & 0x0F;
   882     03D7  0815               	movf	Lcd_Set_Cursor@temp,w
   883     03D8  0094               	movwf	Lcd_Set_Cursor@y
   884     03D9                     l779:
   885     03D9  300F               	movlw	15
   886     03DA  0594               	andwf	Lcd_Set_Cursor@y,f
   887     03DB                     l781:
   888                           
   889                           ;D:\mplab\pic\include\c99/lcd.h: 49:   Lcd_Cmd(z);
   890     03DB  0813               	movf	Lcd_Set_Cursor@z,w
   891     03DC  22F9               	fcall	_Lcd_Cmd
   892     03DD                     l783:
   893                           
   894                           ;D:\mplab\pic\include\c99/lcd.h: 50:   Lcd_Cmd(y);
   895     03DD  1283               	bcf	3,5	;RP0=0, select bank0
   896     03DE  0814               	movf	Lcd_Set_Cursor@y,w
   897     03DF  22F9               	fcall	_Lcd_Cmd
   898                           
   899                           ;D:\mplab\pic\include\c99/lcd.h: 51:  }
   900     03E0  2BFD               	goto	l39
   901     03E1                     l785:
   902     03E1  3002               	movlw	2
   903     03E2  0612               	xorwf	Lcd_Set_Cursor@a,w
   904     03E3  1D03               	btfss	3,2
   905     03E4  2BE6               	goto	u181
   906     03E5  2BE7               	goto	u180
   907     03E6                     u181:
   908     03E6  2BFD               	goto	l39
   909     03E7                     u180:
   910     03E7                     l787:
   911                           
   912                           ;D:\mplab\pic\include\c99/lcd.h: 53:  {;D:\mplab\pic\include\c99/lcd.h: 54:   temp = 0xC
      +                          0 + b - 1;
   913     03E7  0810               	movf	Lcd_Set_Cursor@b,w
   914     03E8  3EBF               	addlw	191
   915     03E9  0095               	movwf	Lcd_Set_Cursor@temp
   916                           
   917                           ;D:\mplab\pic\include\c99/lcd.h: 55:   z = temp>>4;
   918     03EA  0815               	movf	Lcd_Set_Cursor@temp,w
   919     03EB  0091               	movwf	??_Lcd_Set_Cursor
   920     03EC  3004               	movlw	4
   921     03ED                     u195:
   922     03ED  1003               	clrc
   923     03EE  0C91               	rrf	??_Lcd_Set_Cursor,f
   924     03EF  3EFF               	addlw	-1
   925     03F0  1D03               	skipz
   926     03F1  2BED               	goto	u195
   927     03F2  0811               	movf	??_Lcd_Set_Cursor,w
   928     03F3  0093               	movwf	Lcd_Set_Cursor@z
   929     03F4                     l789:
   930                           
   931                           ;D:\mplab\pic\include\c99/lcd.h: 56:   y = temp & 0x0F;
   932     03F4  0815               	movf	Lcd_Set_Cursor@temp,w
   933     03F5  0094               	movwf	Lcd_Set_Cursor@y
   934     03F6                     l791:
   935     03F6  300F               	movlw	15
   936     03F7  0594               	andwf	Lcd_Set_Cursor@y,f
   937     03F8                     l793:
   938                           
   939                           ;D:\mplab\pic\include\c99/lcd.h: 57:   Lcd_Cmd(z);
   940     03F8  0813               	movf	Lcd_Set_Cursor@z,w
   941     03F9  22F9               	fcall	_Lcd_Cmd
   942     03FA                     l795:
   943                           
   944                           ;D:\mplab\pic\include\c99/lcd.h: 58:   Lcd_Cmd(y);
   945     03FA  1283               	bcf	3,5	;RP0=0, select bank0
   946     03FB  0814               	movf	Lcd_Set_Cursor@y,w
   947     03FC  22F9               	fcall	_Lcd_Cmd
   948     03FD                     l39:
   949     03FD  0008               	return
   950     03FE                     __end_of_Lcd_Set_Cursor:
   951                           
   952                           	psect	text7
   953     02F9                     __ptext7:	
   954 ;; *************** function _Lcd_Cmd *****************
   955 ;; Defined at:
   956 ;;		line 26 in file "D:\mplab\pic\include\c99/lcd.h"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  a               1    wreg     unsigned char 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  a               1    3[BANK0 ] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, pclath, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0
   970 ;;      Params:         0       0
   971 ;;      Locals:         0       1
   972 ;;      Temps:          0       2
   973 ;;      Totals:         0       3
   974 ;;Total ram usage:        3 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 1
   977 ;; This function calls:
   978 ;;		_Lcd_Port
   979 ;; This function is called by:
   980 ;;		_Lcd_Clear
   981 ;;		_Lcd_Set_Cursor
   982 ;;		_Lcd_Init
   983 ;;		_Lcd_Shift_Right
   984 ;;		_Lcd_Shift_Left
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988     02F9                     _Lcd_Cmd:	
   989                           ;psect for function _Lcd_Cmd
   990                           
   991                           
   992                           ;incstack = 0
   993                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
   994                           ;Lcd_Cmd@a stored from wreg
   995     02F9  1283               	bcf	3,5	;RP0=0, select bank0
   996     02FA  008F               	movwf	Lcd_Cmd@a
   997     02FB                     l727:
   998                           
   999                           ;D:\mplab\pic\include\c99/lcd.h: 26: void Lcd_Cmd(char a);D:\mplab\pic\include\c99/lcd.h
      +                          : 27: {;D:\mplab\pic\include\c99/lcd.h: 28:  RB2 = 0;
  1000     02FB  1106               	bcf	6,2	;volatile
  1001     02FC                     l729:
  1002                           
  1003                           ;D:\mplab\pic\include\c99/lcd.h: 29:  Lcd_Port(a);
  1004     02FC  080F               	movf	Lcd_Cmd@a,w
  1005     02FD  2326               	fcall	_Lcd_Port
  1006     02FE                     l731:
  1007                           
  1008                           ;D:\mplab\pic\include\c99/lcd.h: 30:  RB3 = 1;
  1009     02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1010     02FF  1586               	bsf	6,3	;volatile
  1011     0300                     l733:
  1012                           
  1013                           ;D:\mplab\pic\include\c99/lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)
      +                          ));
  1014     0300  3006               	movlw	6
  1015     0301  008E               	movwf	??_Lcd_Cmd+1
  1016     0302  3030               	movlw	48
  1017     0303  008D               	movwf	??_Lcd_Cmd
  1018     0304                     u287:
  1019     0304  0B8D               	decfsz	??_Lcd_Cmd,f
  1020     0305  2B04               	goto	u287
  1021     0306  0B8E               	decfsz	??_Lcd_Cmd+1,f
  1022     0307  2B04               	goto	u287
  1023     0308  0000               	nop
  1024     0309                     l735:
  1025                           
  1026                           ;D:\mplab\pic\include\c99/lcd.h: 32:         RB3 = 0;
  1027     0309  1283               	bcf	3,5	;RP0=0, select bank0
  1028     030A  1186               	bcf	6,3	;volatile
  1029     030B                     l30:
  1030     030B  0008               	return
  1031     030C                     __end_of_Lcd_Cmd:
  1032                           
  1033                           	psect	text8
  1034     0326                     __ptext8:	
  1035 ;; *************** function _Lcd_Port *****************
  1036 ;; Defined at:
  1037 ;;		line 4 in file "D:\mplab\pic\include\c99/lcd.h"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  a               1    wreg     unsigned char 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  a               1    0[BANK0 ] unsigned char 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0
  1051 ;;      Params:         0       0
  1052 ;;      Locals:         0       1
  1053 ;;      Temps:          0       0
  1054 ;;      Totals:         0       1
  1055 ;;Total ram usage:        1 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_Lcd_Cmd
  1061 ;;		_Lcd_Init
  1062 ;;		_Lcd_Write_Char
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066     0326                     _Lcd_Port:	
  1067                           ;psect for function _Lcd_Port
  1068                           
  1069                           
  1070                           ;incstack = 0
  1071                           ; Regs used in _Lcd_Port: [wreg]
  1072                           ;Lcd_Port@a stored from wreg
  1073     0326  1283               	bcf	3,5	;RP0=0, select bank0
  1074     0327  008C               	movwf	Lcd_Port@a
  1075     0328                     l717:
  1076                           
  1077                           ;D:\mplab\pic\include\c99/lcd.h: 4: void Lcd_Port(char a);D:\mplab\pic\include\c99/lcd.h
      +                          : 5: {;D:\mplab\pic\include\c99/lcd.h: 6:  if(a & 1)
  1078     0328  1C0C               	btfss	Lcd_Port@a,0
  1079     0329  2B2B               	goto	u111
  1080     032A  2B2C               	goto	u110
  1081     032B                     u111:
  1082     032B  2B2E               	goto	l19
  1083     032C                     u110:
  1084     032C                     l719:
  1085                           
  1086                           ;D:\mplab\pic\include\c99/lcd.h: 7:   RB4 = 1;
  1087     032C  1606               	bsf	6,4	;volatile
  1088     032D  2B2F               	goto	l20
  1089     032E                     l19:	
  1090                           ;D:\mplab\pic\include\c99/lcd.h: 8:  else
  1091                           
  1092                           
  1093                           ;D:\mplab\pic\include\c99/lcd.h: 9:   RB4 = 0;
  1094     032E  1206               	bcf	6,4	;volatile
  1095     032F                     l20:
  1096                           
  1097                           ;D:\mplab\pic\include\c99/lcd.h: 11:  if(a & 2)
  1098     032F  1C8C               	btfss	Lcd_Port@a,1
  1099     0330  2B32               	goto	u121
  1100     0331  2B33               	goto	u120
  1101     0332                     u121:
  1102     0332  2B35               	goto	l21
  1103     0333                     u120:
  1104     0333                     l721:
  1105                           
  1106                           ;D:\mplab\pic\include\c99/lcd.h: 12:   RB5 = 1;
  1107     0333  1686               	bsf	6,5	;volatile
  1108     0334  2B36               	goto	l22
  1109     0335                     l21:	
  1110                           ;D:\mplab\pic\include\c99/lcd.h: 13:  else
  1111                           
  1112                           
  1113                           ;D:\mplab\pic\include\c99/lcd.h: 14:   RB5 = 0;
  1114     0335  1286               	bcf	6,5	;volatile
  1115     0336                     l22:
  1116                           
  1117                           ;D:\mplab\pic\include\c99/lcd.h: 16:  if(a & 4)
  1118     0336  1D0C               	btfss	Lcd_Port@a,2
  1119     0337  2B39               	goto	u131
  1120     0338  2B3A               	goto	u130
  1121     0339                     u131:
  1122     0339  2B3C               	goto	l23
  1123     033A                     u130:
  1124     033A                     l723:
  1125                           
  1126                           ;D:\mplab\pic\include\c99/lcd.h: 17:   RB6 = 1;
  1127     033A  1706               	bsf	6,6	;volatile
  1128     033B  2B3D               	goto	l24
  1129     033C                     l23:	
  1130                           ;D:\mplab\pic\include\c99/lcd.h: 18:  else
  1131                           
  1132                           
  1133                           ;D:\mplab\pic\include\c99/lcd.h: 19:   RB6 = 0;
  1134     033C  1306               	bcf	6,6	;volatile
  1135     033D                     l24:
  1136                           
  1137                           ;D:\mplab\pic\include\c99/lcd.h: 21:  if(a & 8)
  1138     033D  1D8C               	btfss	Lcd_Port@a,3
  1139     033E  2B40               	goto	u141
  1140     033F  2B41               	goto	u140
  1141     0340                     u141:
  1142     0340  2B43               	goto	l25
  1143     0341                     u140:
  1144     0341                     l725:
  1145                           
  1146                           ;D:\mplab\pic\include\c99/lcd.h: 22:   RB7 = 1;
  1147     0341  1786               	bsf	6,7	;volatile
  1148     0342  2B44               	goto	l27
  1149     0343                     l25:	
  1150                           ;D:\mplab\pic\include\c99/lcd.h: 23:  else
  1151                           
  1152                           
  1153                           ;D:\mplab\pic\include\c99/lcd.h: 24:   RB7 = 0;
  1154     0343  1386               	bcf	6,7	;volatile
  1155     0344                     l27:
  1156     0344  0008               	return
  1157     0345                     __end_of_Lcd_Port:
  1158     0000                     ___latbits      equ	0
  1159     004E                     btemp           set	78	;btemp
  1160     004E                     wtemp0          set	78
  1161                           
  1162                           	psect	config
  1163                           
  1164                           ;Config register CONFIG @ 0x2007
  1165                           ;	Oscillator Selection bits
  1166                           ;	FOSC = XT, XT oscillator
  1167                           ;	Watchdog Timer
  1168                           ;	WDTE = OFF, WDT disabled
  1169                           ;	Power-up Timer Enable bit
  1170                           ;	PWRTE = ON, Power-up Timer is enabled
  1171                           ;	Code Protection bit
  1172                           ;	CP = ON, All program memory is code protected
  1173     2007                     	org	8199
  1174     2007  0001               	dw	1

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     13      13

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[9]), STR_2(CODE[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1153
                                             10 BANK0      3     3      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0     406
                                              6 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     261
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     145
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     2      1     314
                                              5 BANK0      3     2      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     222
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     433
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     145
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     116
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON            0      0       0      0.0%
BITBANK0            66      0       0      0.0%
COMMON               0      0       0      0.0%
BANK0               66     13      13     19.7%
STACK                0      0       0      0.0%
DATA                 0      0      13      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Dec 28 15:58:56 2024

                       pc 0002                        l20 032F                        l21 0335  
                      l22 0336                        l30 030B                        l23 033C  
                      l24 033D                        l25 0343                        l33 02E9  
                      l42 03C2                        l27 0344                        l19 032E  
                      l51 0325                        l60 02F8                        l45 038E  
                      l39 03FD                        l65 0366                        fsr 0004  
                     l721 0333                       l801 0315                       l723 033A  
                     l731 02FE                       l803 031C                       l811 02F7  
                     l725 0341                       l717 0328                       l733 0300  
                     l741 0391                       l805 02EA                       l821 034F  
                     l719 032C                       l735 0309                       l727 02FB  
                     l751 036B                       l743 039B                       l807 02EC  
                     l823 0358                       l729 02FC                       l761 037E  
                     l753 036D                       l737 02E5                       l745 03A6  
                     l809 02ED                       l817 0345                       l771 038C  
                     l763 0382                       l755 0371                       l747 03A8  
                     l739 038F                       l819 034B                       l781 03DB  
                     l773 03C5                       l765 0384                       l757 0372  
                     l749 0369                       l791 03F6                       l783 03DD  
                     l775 03CA                       l767 0386                       l759 037C  
                     l793 03F8                       l777 03D7                       l785 03E1  
                     l769 0388                       l795 03FA                       l787 03E7  
                     l779 03D9                       l789 03F4                       l797 030C  
                     l799 0310                       _RB2 0032                       _RB3 0033  
                     _RB4 0034                       _RB5 0035                       _RB6 0036  
                     _RB7 0037                       u110 032C                       u111 032B  
                     u120 0333                       u200 0325                       u121 0332  
                     u201 0324                       u130 033A                       u131 0339  
                     u140 0341                       u141 0340                       u160 03CA  
                     u161 03C9                       u217 035F                       u155 0375  
                     u227 02F2                       u180 03E7                       u181 03E6  
                     u237 0396                       u175 03D0                       u247 03A2  
                     u257 03AD                       u195 03ED                       u267 0380  
                     u277 038A                       u287 0304                       fsr0 0004  
                    STR_1 0011                      STR_2 0007         ?_Lcd_Write_String 0011  
                    _main 0345                      btemp 004E                      start 0000  
      ??_Lcd_Write_String 0000           __end_of_Lcd_Cmd 030C                     ?_main 000C  
                   _TRISB 0086                     _setup 02EA                     pclath 000A  
                   status 0003                     wtemp0 004E          __end_of_Lcd_Init 03C3  
        __end_of_Lcd_Port 0345           __initialization 03FE              __end_of_main 0367  
                  ??_main 0016                    ?_setup 000C                 ??_Lcd_Cmd 000D  
         Lcd_Set_Cursor@a 0012           Lcd_Set_Cursor@b 0010           Lcd_Set_Cursor@y 0014  
         Lcd_Set_Cursor@z 0013   __end_of__initialization 03FE         __end_of_Lcd_Clear 02EA  
          __pcstackCOMMON 0000             __end_of_setup 02F9            _Lcd_Set_Cursor 03C3  
               ?_Lcd_Init 000C                 ?_Lcd_Port 000C                   ??_setup 0012  
              __pmaintext 0345    __end_of_Lcd_Set_Cursor 03FE                ??_Lcd_Init 0010  
              ??_Lcd_Port 0000                __stringtab 0001            _Lcd_Write_Char 0367  
                 _Lcd_Cmd 02F9           ?_Lcd_Set_Cursor 0010                   __ptext1 02EA  
                 __ptext2 038F                   __ptext3 02E5                   __ptext4 030C  
                 __ptext5 0367                   __ptext6 03C3                   __ptext7 02F9  
                 __ptext8 0326    __end_of_Lcd_Write_Char 038F      end_of_initialization 03FE  
               Lcd_Port@a 000C           ?_Lcd_Write_Char 000C         Lcd_Write_String@a 0011  
       Lcd_Write_String@i 0012                 _Lcd_Clear 02E5          _Lcd_Write_String 030C  
     start_initialization 03FE                ?_Lcd_Clear 000C           Lcd_Write_Char@a 0010  
         Lcd_Write_Char@y 000F                 ___latbits 0000             __pcstackBANK0 000C  
                ?_Lcd_Cmd 000C          ??_Lcd_Set_Cursor 0011                 __pstrings 0001  
                Lcd_Cmd@a 000F               ??_Lcd_Clear 0000               __stringbase 0006  
        ??_Lcd_Write_Char 000D                  _Lcd_Init 038F                  _Lcd_Port 0326  
__end_of_Lcd_Write_String 0326        __end_of__stringtab 0007        Lcd_Write_Char@temp 000E  
               stringcode 0001        Lcd_Set_Cursor@temp 0015                  stringdir 0001  
                stringtab 0001  
